// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AwAA//+lXYKBDR4AAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
